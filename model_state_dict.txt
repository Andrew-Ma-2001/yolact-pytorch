Model's state_dict:
conv1.weight 	 torch.Size([64, 3, 7, 7])
bn1.weight 	 torch.Size([64])
bn1.bias 	 torch.Size([64])
bn1.running_mean 	 torch.Size([64])
bn1.running_var 	 torch.Size([64])
bn1.num_batches_tracked 	 torch.Size([])
layers.0.0.conv1.weight 	 torch.Size([64, 64, 1, 1])
layers.0.0.bn1.weight 	 torch.Size([64])
layers.0.0.bn1.bias 	 torch.Size([64])
layers.0.0.bn1.running_mean 	 torch.Size([64])
layers.0.0.bn1.running_var 	 torch.Size([64])
layers.0.0.bn1.num_batches_tracked 	 torch.Size([])
layers.0.0.conv2.weight 	 torch.Size([64, 64, 3, 3])
layers.0.0.bn2.weight 	 torch.Size([64])
layers.0.0.bn2.bias 	 torch.Size([64])
layers.0.0.bn2.running_mean 	 torch.Size([64])
layers.0.0.bn2.running_var 	 torch.Size([64])
layers.0.0.bn2.num_batches_tracked 	 torch.Size([])
layers.0.0.conv3.weight 	 torch.Size([256, 64, 1, 1])
layers.0.0.bn3.weight 	 torch.Size([256])
layers.0.0.bn3.bias 	 torch.Size([256])
layers.0.0.bn3.running_mean 	 torch.Size([256])
layers.0.0.bn3.running_var 	 torch.Size([256])
layers.0.0.bn3.num_batches_tracked 	 torch.Size([])
layers.0.0.downsample.0.weight 	 torch.Size([256, 64, 1, 1])
layers.0.0.downsample.1.weight 	 torch.Size([256])
layers.0.0.downsample.1.bias 	 torch.Size([256])
layers.0.0.downsample.1.running_mean 	 torch.Size([256])
layers.0.0.downsample.1.running_var 	 torch.Size([256])
layers.0.0.downsample.1.num_batches_tracked 	 torch.Size([])
layers.0.1.conv1.weight 	 torch.Size([64, 256, 1, 1])
layers.0.1.bn1.weight 	 torch.Size([64])
layers.0.1.bn1.bias 	 torch.Size([64])
layers.0.1.bn1.running_mean 	 torch.Size([64])
layers.0.1.bn1.running_var 	 torch.Size([64])
layers.0.1.bn1.num_batches_tracked 	 torch.Size([])
layers.0.1.conv2.weight 	 torch.Size([64, 64, 3, 3])
layers.0.1.bn2.weight 	 torch.Size([64])
layers.0.1.bn2.bias 	 torch.Size([64])
layers.0.1.bn2.running_mean 	 torch.Size([64])
layers.0.1.bn2.running_var 	 torch.Size([64])
layers.0.1.bn2.num_batches_tracked 	 torch.Size([])
layers.0.1.conv3.weight 	 torch.Size([256, 64, 1, 1])
layers.0.1.bn3.weight 	 torch.Size([256])
layers.0.1.bn3.bias 	 torch.Size([256])
layers.0.1.bn3.running_mean 	 torch.Size([256])
layers.0.1.bn3.running_var 	 torch.Size([256])
layers.0.1.bn3.num_batches_tracked 	 torch.Size([])
layers.1.0.conv1.weight 	 torch.Size([128, 256, 1, 1])
layers.1.0.bn1.weight 	 torch.Size([128])
layers.1.0.bn1.bias 	 torch.Size([128])
layers.1.0.bn1.running_mean 	 torch.Size([128])
layers.1.0.bn1.running_var 	 torch.Size([128])
layers.1.0.bn1.num_batches_tracked 	 torch.Size([])
layers.1.0.conv2.weight 	 torch.Size([128, 128, 3, 3])
layers.1.0.bn2.weight 	 torch.Size([128])
layers.1.0.bn2.bias 	 torch.Size([128])
layers.1.0.bn2.running_mean 	 torch.Size([128])
layers.1.0.bn2.running_var 	 torch.Size([128])
layers.1.0.bn2.num_batches_tracked 	 torch.Size([])
layers.1.0.conv3.weight 	 torch.Size([512, 128, 1, 1])
layers.1.0.bn3.weight 	 torch.Size([512])
layers.1.0.bn3.bias 	 torch.Size([512])
layers.1.0.bn3.running_mean 	 torch.Size([512])
layers.1.0.bn3.running_var 	 torch.Size([512])
layers.1.0.bn3.num_batches_tracked 	 torch.Size([])
layers.1.0.downsample.0.weight 	 torch.Size([512, 256, 1, 1])
layers.1.0.downsample.1.weight 	 torch.Size([512])
layers.1.0.downsample.1.bias 	 torch.Size([512])
layers.1.0.downsample.1.running_mean 	 torch.Size([512])
layers.1.0.downsample.1.running_var 	 torch.Size([512])
layers.1.0.downsample.1.num_batches_tracked 	 torch.Size([])
layers.1.1.conv1.weight 	 torch.Size([128, 512, 1, 1])
layers.1.1.bn1.weight 	 torch.Size([128])
layers.1.1.bn1.bias 	 torch.Size([128])
layers.1.1.bn1.running_mean 	 torch.Size([128])
layers.1.1.bn1.running_var 	 torch.Size([128])
layers.1.1.bn1.num_batches_tracked 	 torch.Size([])
layers.1.1.conv2.weight 	 torch.Size([128, 128, 3, 3])
layers.1.1.bn2.weight 	 torch.Size([128])
layers.1.1.bn2.bias 	 torch.Size([128])
layers.1.1.bn2.running_mean 	 torch.Size([128])
layers.1.1.bn2.running_var 	 torch.Size([128])
layers.1.1.bn2.num_batches_tracked 	 torch.Size([])
layers.1.1.conv3.weight 	 torch.Size([512, 128, 1, 1])
layers.1.1.bn3.weight 	 torch.Size([512])
layers.1.1.bn3.bias 	 torch.Size([512])
layers.1.1.bn3.running_mean 	 torch.Size([512])
layers.1.1.bn3.running_var 	 torch.Size([512])
layers.1.1.bn3.num_batches_tracked 	 torch.Size([])
layers.2.0.conv1.weight 	 torch.Size([256, 512, 1, 1])
layers.2.0.bn1.weight 	 torch.Size([256])
layers.2.0.bn1.bias 	 torch.Size([256])
layers.2.0.bn1.running_mean 	 torch.Size([256])
layers.2.0.bn1.running_var 	 torch.Size([256])
layers.2.0.bn1.num_batches_tracked 	 torch.Size([])
layers.2.0.conv2.weight 	 torch.Size([256, 256, 3, 3])
layers.2.0.bn2.weight 	 torch.Size([256])
layers.2.0.bn2.bias 	 torch.Size([256])
layers.2.0.bn2.running_mean 	 torch.Size([256])
layers.2.0.bn2.running_var 	 torch.Size([256])
layers.2.0.bn2.num_batches_tracked 	 torch.Size([])
layers.2.0.conv3.weight 	 torch.Size([1024, 256, 1, 1])
layers.2.0.bn3.weight 	 torch.Size([1024])
layers.2.0.bn3.bias 	 torch.Size([1024])
layers.2.0.bn3.running_mean 	 torch.Size([1024])
layers.2.0.bn3.running_var 	 torch.Size([1024])
layers.2.0.bn3.num_batches_tracked 	 torch.Size([])
layers.2.0.downsample.0.weight 	 torch.Size([1024, 512, 1, 1])
layers.2.0.downsample.1.weight 	 torch.Size([1024])
layers.2.0.downsample.1.bias 	 torch.Size([1024])
layers.2.0.downsample.1.running_mean 	 torch.Size([1024])
layers.2.0.downsample.1.running_var 	 torch.Size([1024])
layers.2.0.downsample.1.num_batches_tracked 	 torch.Size([])
layers.2.1.conv1.weight 	 torch.Size([256, 1024, 1, 1])
layers.2.1.bn1.weight 	 torch.Size([256])
layers.2.1.bn1.bias 	 torch.Size([256])
layers.2.1.bn1.running_mean 	 torch.Size([256])
layers.2.1.bn1.running_var 	 torch.Size([256])
layers.2.1.bn1.num_batches_tracked 	 torch.Size([])
layers.2.1.conv2.weight 	 torch.Size([256, 256, 3, 3])
layers.2.1.bn2.weight 	 torch.Size([256])
layers.2.1.bn2.bias 	 torch.Size([256])
layers.2.1.bn2.running_mean 	 torch.Size([256])
layers.2.1.bn2.running_var 	 torch.Size([256])
layers.2.1.bn2.num_batches_tracked 	 torch.Size([])
layers.2.1.conv3.weight 	 torch.Size([1024, 256, 1, 1])
layers.2.1.bn3.weight 	 torch.Size([1024])
layers.2.1.bn3.bias 	 torch.Size([1024])
layers.2.1.bn3.running_mean 	 torch.Size([1024])
layers.2.1.bn3.running_var 	 torch.Size([1024])
layers.2.1.bn3.num_batches_tracked 	 torch.Size([])
layers.3.0.conv1.weight 	 torch.Size([512, 1024, 1, 1])
layers.3.0.bn1.weight 	 torch.Size([512])
layers.3.0.bn1.bias 	 torch.Size([512])
layers.3.0.bn1.running_mean 	 torch.Size([512])
layers.3.0.bn1.running_var 	 torch.Size([512])
layers.3.0.bn1.num_batches_tracked 	 torch.Size([])
layers.3.0.conv2.weight 	 torch.Size([512, 512, 3, 3])
layers.3.0.bn2.weight 	 torch.Size([512])
layers.3.0.bn2.bias 	 torch.Size([512])
layers.3.0.bn2.running_mean 	 torch.Size([512])
layers.3.0.bn2.running_var 	 torch.Size([512])
layers.3.0.bn2.num_batches_tracked 	 torch.Size([])
layers.3.0.conv3.weight 	 torch.Size([2048, 512, 1, 1])
layers.3.0.bn3.weight 	 torch.Size([2048])
layers.3.0.bn3.bias 	 torch.Size([2048])
layers.3.0.bn3.running_mean 	 torch.Size([2048])
layers.3.0.bn3.running_var 	 torch.Size([2048])
layers.3.0.bn3.num_batches_tracked 	 torch.Size([])
layers.3.0.downsample.0.weight 	 torch.Size([2048, 1024, 1, 1])
layers.3.0.downsample.1.weight 	 torch.Size([2048])
layers.3.0.downsample.1.bias 	 torch.Size([2048])
layers.3.0.downsample.1.running_mean 	 torch.Size([2048])
layers.3.0.downsample.1.running_var 	 torch.Size([2048])
layers.3.0.downsample.1.num_batches_tracked 	 torch.Size([])
layers.3.1.conv1.weight 	 torch.Size([512, 2048, 1, 1])
layers.3.1.bn1.weight 	 torch.Size([512])
layers.3.1.bn1.bias 	 torch.Size([512])
layers.3.1.bn1.running_mean 	 torch.Size([512])
layers.3.1.bn1.running_var 	 torch.Size([512])
layers.3.1.bn1.num_batches_tracked 	 torch.Size([])
layers.3.1.conv2.weight 	 torch.Size([512, 512, 3, 3])
layers.3.1.bn2.weight 	 torch.Size([512])
layers.3.1.bn2.bias 	 torch.Size([512])
layers.3.1.bn2.running_mean 	 torch.Size([512])
layers.3.1.bn2.running_var 	 torch.Size([512])
layers.3.1.bn2.num_batches_tracked 	 torch.Size([])
layers.3.1.conv3.weight 	 torch.Size([2048, 512, 1, 1])
layers.3.1.bn3.weight 	 torch.Size([2048])
layers.3.1.bn3.bias 	 torch.Size([2048])
layers.3.1.bn3.running_mean 	 torch.Size([2048])
layers.3.1.bn3.running_var 	 torch.Size([2048])
layers.3.1.bn3.num_batches_tracked 	 torch.Size([])
